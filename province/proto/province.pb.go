// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.17.3
// source: province.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetAllProvinces
type GetAllProvincesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *Header         `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Data   []*ProvinceData `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAllProvincesResponse) Reset() {
	*x = GetAllProvincesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllProvincesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllProvincesResponse) ProtoMessage() {}

func (x *GetAllProvincesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllProvincesResponse.ProtoReflect.Descriptor instead.
func (*GetAllProvincesResponse) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{0}
}

func (x *GetAllProvincesResponse) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetAllProvincesResponse) GetData() []*ProvinceData {
	if x != nil {
		return x.Data
	}
	return nil
}

// GetProvinceByID
type GetProvinceByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *GetProvinceByIDInput `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *GetProvinceByIDRequest) Reset() {
	*x = GetProvinceByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProvinceByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProvinceByIDRequest) ProtoMessage() {}

func (x *GetProvinceByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProvinceByIDRequest.ProtoReflect.Descriptor instead.
func (*GetProvinceByIDRequest) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{1}
}

func (x *GetProvinceByIDRequest) GetRequest() *GetProvinceByIDInput {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetProvinceByIDInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProvinceByIDInput) Reset() {
	*x = GetProvinceByIDInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProvinceByIDInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProvinceByIDInput) ProtoMessage() {}

func (x *GetProvinceByIDInput) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProvinceByIDInput.ProtoReflect.Descriptor instead.
func (*GetProvinceByIDInput) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{2}
}

func (x *GetProvinceByIDInput) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetProvinceByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *Header       `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Data   *ProvinceData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetProvinceByIDResponse) Reset() {
	*x = GetProvinceByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProvinceByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProvinceByIDResponse) ProtoMessage() {}

func (x *GetProvinceByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProvinceByIDResponse.ProtoReflect.Descriptor instead.
func (*GetProvinceByIDResponse) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{3}
}

func (x *GetProvinceByIDResponse) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetProvinceByIDResponse) GetData() *ProvinceData {
	if x != nil {
		return x.Data
	}
	return nil
}

// GetProvincesByIDs
type GetProvincesByIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *GetProvincesByIDsInput `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *GetProvincesByIDsRequest) Reset() {
	*x = GetProvincesByIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProvincesByIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProvincesByIDsRequest) ProtoMessage() {}

func (x *GetProvincesByIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProvincesByIDsRequest.ProtoReflect.Descriptor instead.
func (*GetProvincesByIDsRequest) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{4}
}

func (x *GetProvincesByIDsRequest) GetRequest() *GetProvincesByIDsInput {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetProvincesByIDsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProvincesByIDsInput) Reset() {
	*x = GetProvincesByIDsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProvincesByIDsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProvincesByIDsInput) ProtoMessage() {}

func (x *GetProvincesByIDsInput) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProvincesByIDsInput.ProtoReflect.Descriptor instead.
func (*GetProvincesByIDsInput) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{5}
}

func (x *GetProvincesByIDsInput) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetProvincesByIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *Header         `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Data   []*ProvinceData `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetProvincesByIDsResponse) Reset() {
	*x = GetProvincesByIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProvincesByIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProvincesByIDsResponse) ProtoMessage() {}

func (x *GetProvincesByIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProvincesByIDsResponse.ProtoReflect.Descriptor instead.
func (*GetProvincesByIDsResponse) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{6}
}

func (x *GetProvincesByIDsResponse) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetProvincesByIDsResponse) GetData() []*ProvinceData {
	if x != nil {
		return x.Data
	}
	return nil
}

// InsertProvince
type InsertProvinceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *InsertProvinceInput `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *InsertProvinceRequest) Reset() {
	*x = InsertProvinceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertProvinceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertProvinceRequest) ProtoMessage() {}

func (x *InsertProvinceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertProvinceRequest.ProtoReflect.Descriptor instead.
func (*InsertProvinceRequest) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{7}
}

func (x *InsertProvinceRequest) GetRequest() *InsertProvinceInput {
	if x != nil {
		return x.Request
	}
	return nil
}

type InsertProvinceInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProvinceID   string `protobuf:"bytes,1,opt,name=provinceID,proto3" json:"provinceID,omitempty"`
	ProvinceName string `protobuf:"bytes,2,opt,name=provinceName,proto3" json:"provinceName,omitempty"`
	IslandID     string `protobuf:"bytes,3,opt,name=islandID,proto3" json:"islandID,omitempty"`
}

func (x *InsertProvinceInput) Reset() {
	*x = InsertProvinceInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertProvinceInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertProvinceInput) ProtoMessage() {}

func (x *InsertProvinceInput) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertProvinceInput.ProtoReflect.Descriptor instead.
func (*InsertProvinceInput) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{8}
}

func (x *InsertProvinceInput) GetProvinceID() string {
	if x != nil {
		return x.ProvinceID
	}
	return ""
}

func (x *InsertProvinceInput) GetProvinceName() string {
	if x != nil {
		return x.ProvinceName
	}
	return ""
}

func (x *InsertProvinceInput) GetIslandID() string {
	if x != nil {
		return x.IslandID
	}
	return ""
}

type InsertProvinceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *Header       `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Data   *ProvinceData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *InsertProvinceResponse) Reset() {
	*x = InsertProvinceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertProvinceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertProvinceResponse) ProtoMessage() {}

func (x *InsertProvinceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertProvinceResponse.ProtoReflect.Descriptor instead.
func (*InsertProvinceResponse) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{9}
}

func (x *InsertProvinceResponse) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *InsertProvinceResponse) GetData() *ProvinceData {
	if x != nil {
		return x.Data
	}
	return nil
}

// InsertProvinces
type InsertProvincesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request []*InsertProvinceInput `protobuf:"bytes,1,rep,name=request,proto3" json:"request,omitempty"`
}

func (x *InsertProvincesRequest) Reset() {
	*x = InsertProvincesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertProvincesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertProvincesRequest) ProtoMessage() {}

func (x *InsertProvincesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertProvincesRequest.ProtoReflect.Descriptor instead.
func (*InsertProvincesRequest) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{10}
}

func (x *InsertProvincesRequest) GetRequest() []*InsertProvinceInput {
	if x != nil {
		return x.Request
	}
	return nil
}

type InsertProvincesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *Header         `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Data   []*ProvinceData `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *InsertProvincesResponse) Reset() {
	*x = InsertProvincesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertProvincesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertProvincesResponse) ProtoMessage() {}

func (x *InsertProvincesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertProvincesResponse.ProtoReflect.Descriptor instead.
func (*InsertProvincesResponse) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{11}
}

func (x *InsertProvincesResponse) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *InsertProvincesResponse) GetData() []*ProvinceData {
	if x != nil {
		return x.Data
	}
	return nil
}

// UpdateProvince
type UpdateProvinceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *UpdateProvinceInput `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *UpdateProvinceRequest) Reset() {
	*x = UpdateProvinceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProvinceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProvinceRequest) ProtoMessage() {}

func (x *UpdateProvinceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProvinceRequest.ProtoReflect.Descriptor instead.
func (*UpdateProvinceRequest) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateProvinceRequest) GetRequest() *UpdateProvinceInput {
	if x != nil {
		return x.Request
	}
	return nil
}

type UpdateProvinceInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProvinceID   string          `protobuf:"bytes,1,opt,name=provinceID,proto3" json:"provinceID,omitempty"`
	ProvinceName *OptionalString `protobuf:"bytes,2,opt,name=provinceName,proto3" json:"provinceName,omitempty"`
	IslandID     *OptionalString `protobuf:"bytes,3,opt,name=islandID,proto3" json:"islandID,omitempty"`
}

func (x *UpdateProvinceInput) Reset() {
	*x = UpdateProvinceInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProvinceInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProvinceInput) ProtoMessage() {}

func (x *UpdateProvinceInput) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProvinceInput.ProtoReflect.Descriptor instead.
func (*UpdateProvinceInput) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateProvinceInput) GetProvinceID() string {
	if x != nil {
		return x.ProvinceID
	}
	return ""
}

func (x *UpdateProvinceInput) GetProvinceName() *OptionalString {
	if x != nil {
		return x.ProvinceName
	}
	return nil
}

func (x *UpdateProvinceInput) GetIslandID() *OptionalString {
	if x != nil {
		return x.IslandID
	}
	return nil
}

type UpdateProvinceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *Header       `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Data   *ProvinceData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateProvinceResponse) Reset() {
	*x = UpdateProvinceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProvinceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProvinceResponse) ProtoMessage() {}

func (x *UpdateProvinceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProvinceResponse.ProtoReflect.Descriptor instead.
func (*UpdateProvinceResponse) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateProvinceResponse) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *UpdateProvinceResponse) GetData() *ProvinceData {
	if x != nil {
		return x.Data
	}
	return nil
}

// UpdateProvinces
type UpdateProvincesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request []*UpdateProvinceInput `protobuf:"bytes,1,rep,name=request,proto3" json:"request,omitempty"`
}

func (x *UpdateProvincesRequest) Reset() {
	*x = UpdateProvincesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProvincesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProvincesRequest) ProtoMessage() {}

func (x *UpdateProvincesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProvincesRequest.ProtoReflect.Descriptor instead.
func (*UpdateProvincesRequest) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateProvincesRequest) GetRequest() []*UpdateProvinceInput {
	if x != nil {
		return x.Request
	}
	return nil
}

type UpdateProvincesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *Header         `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Data   []*ProvinceData `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateProvincesResponse) Reset() {
	*x = UpdateProvincesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProvincesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProvincesResponse) ProtoMessage() {}

func (x *UpdateProvincesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProvincesResponse.ProtoReflect.Descriptor instead.
func (*UpdateProvincesResponse) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateProvincesResponse) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *UpdateProvincesResponse) GetData() []*ProvinceData {
	if x != nil {
		return x.Data
	}
	return nil
}

// DeleteProvince
type DeleteProvinceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *DeleteProvinceInput `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *DeleteProvinceRequest) Reset() {
	*x = DeleteProvinceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProvinceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProvinceRequest) ProtoMessage() {}

func (x *DeleteProvinceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProvinceRequest.ProtoReflect.Descriptor instead.
func (*DeleteProvinceRequest) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteProvinceRequest) GetRequest() *DeleteProvinceInput {
	if x != nil {
		return x.Request
	}
	return nil
}

type DeleteProvinceInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteProvinceInput) Reset() {
	*x = DeleteProvinceInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProvinceInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProvinceInput) ProtoMessage() {}

func (x *DeleteProvinceInput) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProvinceInput.ProtoReflect.Descriptor instead.
func (*DeleteProvinceInput) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteProvinceInput) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteProvinceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *Header       `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Data   *ProvinceData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteProvinceResponse) Reset() {
	*x = DeleteProvinceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProvinceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProvinceResponse) ProtoMessage() {}

func (x *DeleteProvinceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProvinceResponse.ProtoReflect.Descriptor instead.
func (*DeleteProvinceResponse) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteProvinceResponse) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DeleteProvinceResponse) GetData() *ProvinceData {
	if x != nil {
		return x.Data
	}
	return nil
}

// DeleteProvinces
type DeleteProvincesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *DeleteProvincesInput `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *DeleteProvincesRequest) Reset() {
	*x = DeleteProvincesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProvincesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProvincesRequest) ProtoMessage() {}

func (x *DeleteProvincesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProvincesRequest.ProtoReflect.Descriptor instead.
func (*DeleteProvincesRequest) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteProvincesRequest) GetRequest() *DeleteProvincesInput {
	if x != nil {
		return x.Request
	}
	return nil
}

type DeleteProvincesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteProvincesInput) Reset() {
	*x = DeleteProvincesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProvincesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProvincesInput) ProtoMessage() {}

func (x *DeleteProvincesInput) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProvincesInput.ProtoReflect.Descriptor instead.
func (*DeleteProvincesInput) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteProvincesInput) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

type DeleteProvincesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *Header         `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Data   []*ProvinceData `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteProvincesResponse) Reset() {
	*x = DeleteProvincesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProvincesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProvincesResponse) ProtoMessage() {}

func (x *DeleteProvincesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProvincesResponse.ProtoReflect.Descriptor instead.
func (*DeleteProvincesResponse) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteProvincesResponse) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DeleteProvincesResponse) GetData() []*ProvinceData {
	if x != nil {
		return x.Data
	}
	return nil
}

// Base Data
type ProvinceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProvinceID   string `protobuf:"bytes,1,opt,name=provinceID,proto3" json:"provinceID,omitempty"`
	ProvinceName string `protobuf:"bytes,2,opt,name=provinceName,proto3" json:"provinceName,omitempty"`
	IslandID     string `protobuf:"bytes,3,opt,name=islandID,proto3" json:"islandID,omitempty"`
}

func (x *ProvinceData) Reset() {
	*x = ProvinceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvinceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvinceData) ProtoMessage() {}

func (x *ProvinceData) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvinceData.ProtoReflect.Descriptor instead.
func (*ProvinceData) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{23}
}

func (x *ProvinceData) GetProvinceID() string {
	if x != nil {
		return x.ProvinceID
	}
	return ""
}

func (x *ProvinceData) GetProvinceName() string {
	if x != nil {
		return x.ProvinceName
	}
	return ""
}

func (x *ProvinceData) GetIslandID() string {
	if x != nil {
		return x.IslandID
	}
	return ""
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message []string `protobuf:"bytes,2,rep,name=message,proto3" json:"message,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{24}
}

func (x *Header) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Header) GetMessage() []string {
	if x != nil {
		return x.Message
	}
	return nil
}

type OptionalString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value  string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	HasSet bool   `protobuf:"varint,2,opt,name=hasSet,proto3" json:"hasSet,omitempty"`
}

func (x *OptionalString) Reset() {
	*x = OptionalString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_province_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionalString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionalString) ProtoMessage() {}

func (x *OptionalString) ProtoReflect() protoreflect.Message {
	mi := &file_province_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionalString.ProtoReflect.Descriptor instead.
func (*OptionalString) Descriptor() ([]byte, []int) {
	return file_province_proto_rawDescGZIP(), []int{25}
}

func (x *OptionalString) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *OptionalString) GetHasSet() bool {
	if x != nil {
		return x.HasSet
	}
	return false
}

var File_province_proto protoreflect.FileDescriptor

var file_province_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x52, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x26, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x6f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x28, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x56, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3a, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x28, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x49,
	0x44, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x71, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2a,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x50, 0x0a, 0x15, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x75, 0x0a, 0x13,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x6c, 0x61, 0x6e,
	0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x6c, 0x61, 0x6e,
	0x64, 0x49, 0x44, 0x22, 0x6e, 0x0a, 0x16, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x51, 0x0a, 0x16, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x07, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x17, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x50, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x37, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49,
	0x44, 0x12, 0x3c, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x34, 0x0a, 0x08, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x69, 0x73, 0x6c,
	0x61, 0x6e, 0x64, 0x49, 0x44, 0x22, 0x6e, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x28, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x51, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x37, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x50, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x25, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x6e, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x52, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x07, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6f,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x6e, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x22,
	0x3a, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3e, 0x0a, 0x0e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x53, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61, 0x73, 0x53, 0x65, 0x74, 0x32, 0xae, 0x06, 0x0a, 0x0f,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x4e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x58, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x12, 0x22,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x58, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x58, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x58, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x03, 0x5a, 0x01,
	0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_province_proto_rawDescOnce sync.Once
	file_province_proto_rawDescData = file_province_proto_rawDesc
)

func file_province_proto_rawDescGZIP() []byte {
	file_province_proto_rawDescOnce.Do(func() {
		file_province_proto_rawDescData = protoimpl.X.CompressGZIP(file_province_proto_rawDescData)
	})
	return file_province_proto_rawDescData
}

var file_province_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_province_proto_goTypes = []interface{}{
	(*GetAllProvincesResponse)(nil),   // 0: province.GetAllProvincesResponse
	(*GetProvinceByIDRequest)(nil),    // 1: province.GetProvinceByIDRequest
	(*GetProvinceByIDInput)(nil),      // 2: province.GetProvinceByIDInput
	(*GetProvinceByIDResponse)(nil),   // 3: province.GetProvinceByIDResponse
	(*GetProvincesByIDsRequest)(nil),  // 4: province.GetProvincesByIDsRequest
	(*GetProvincesByIDsInput)(nil),    // 5: province.GetProvincesByIDsInput
	(*GetProvincesByIDsResponse)(nil), // 6: province.GetProvincesByIDsResponse
	(*InsertProvinceRequest)(nil),     // 7: province.InsertProvinceRequest
	(*InsertProvinceInput)(nil),       // 8: province.InsertProvinceInput
	(*InsertProvinceResponse)(nil),    // 9: province.InsertProvinceResponse
	(*InsertProvincesRequest)(nil),    // 10: province.InsertProvincesRequest
	(*InsertProvincesResponse)(nil),   // 11: province.InsertProvincesResponse
	(*UpdateProvinceRequest)(nil),     // 12: province.UpdateProvinceRequest
	(*UpdateProvinceInput)(nil),       // 13: province.UpdateProvinceInput
	(*UpdateProvinceResponse)(nil),    // 14: province.UpdateProvinceResponse
	(*UpdateProvincesRequest)(nil),    // 15: province.UpdateProvincesRequest
	(*UpdateProvincesResponse)(nil),   // 16: province.UpdateProvincesResponse
	(*DeleteProvinceRequest)(nil),     // 17: province.DeleteProvinceRequest
	(*DeleteProvinceInput)(nil),       // 18: province.DeleteProvinceInput
	(*DeleteProvinceResponse)(nil),    // 19: province.DeleteProvinceResponse
	(*DeleteProvincesRequest)(nil),    // 20: province.DeleteProvincesRequest
	(*DeleteProvincesInput)(nil),      // 21: province.DeleteProvincesInput
	(*DeleteProvincesResponse)(nil),   // 22: province.DeleteProvincesResponse
	(*ProvinceData)(nil),              // 23: province.ProvinceData
	(*Header)(nil),                    // 24: province.Header
	(*OptionalString)(nil),            // 25: province.OptionalString
	(*emptypb.Empty)(nil),             // 26: google.protobuf.Empty
}
var file_province_proto_depIdxs = []int32{
	24, // 0: province.GetAllProvincesResponse.header:type_name -> province.Header
	23, // 1: province.GetAllProvincesResponse.data:type_name -> province.ProvinceData
	2,  // 2: province.GetProvinceByIDRequest.request:type_name -> province.GetProvinceByIDInput
	24, // 3: province.GetProvinceByIDResponse.header:type_name -> province.Header
	23, // 4: province.GetProvinceByIDResponse.data:type_name -> province.ProvinceData
	5,  // 5: province.GetProvincesByIDsRequest.request:type_name -> province.GetProvincesByIDsInput
	24, // 6: province.GetProvincesByIDsResponse.header:type_name -> province.Header
	23, // 7: province.GetProvincesByIDsResponse.data:type_name -> province.ProvinceData
	8,  // 8: province.InsertProvinceRequest.request:type_name -> province.InsertProvinceInput
	24, // 9: province.InsertProvinceResponse.header:type_name -> province.Header
	23, // 10: province.InsertProvinceResponse.data:type_name -> province.ProvinceData
	8,  // 11: province.InsertProvincesRequest.request:type_name -> province.InsertProvinceInput
	24, // 12: province.InsertProvincesResponse.header:type_name -> province.Header
	23, // 13: province.InsertProvincesResponse.data:type_name -> province.ProvinceData
	13, // 14: province.UpdateProvinceRequest.request:type_name -> province.UpdateProvinceInput
	25, // 15: province.UpdateProvinceInput.provinceName:type_name -> province.OptionalString
	25, // 16: province.UpdateProvinceInput.islandID:type_name -> province.OptionalString
	24, // 17: province.UpdateProvinceResponse.header:type_name -> province.Header
	23, // 18: province.UpdateProvinceResponse.data:type_name -> province.ProvinceData
	13, // 19: province.UpdateProvincesRequest.request:type_name -> province.UpdateProvinceInput
	24, // 20: province.UpdateProvincesResponse.header:type_name -> province.Header
	23, // 21: province.UpdateProvincesResponse.data:type_name -> province.ProvinceData
	18, // 22: province.DeleteProvinceRequest.request:type_name -> province.DeleteProvinceInput
	24, // 23: province.DeleteProvinceResponse.header:type_name -> province.Header
	23, // 24: province.DeleteProvinceResponse.data:type_name -> province.ProvinceData
	21, // 25: province.DeleteProvincesRequest.request:type_name -> province.DeleteProvincesInput
	24, // 26: province.DeleteProvincesResponse.header:type_name -> province.Header
	23, // 27: province.DeleteProvincesResponse.data:type_name -> province.ProvinceData
	26, // 28: province.ProvinceService.GetAllProvinces:input_type -> google.protobuf.Empty
	1,  // 29: province.ProvinceService.GetProvinceByID:input_type -> province.GetProvinceByIDRequest
	4,  // 30: province.ProvinceService.GetProvincesByIDs:input_type -> province.GetProvincesByIDsRequest
	7,  // 31: province.ProvinceService.InsertProvince:input_type -> province.InsertProvinceRequest
	10, // 32: province.ProvinceService.InsertProvinces:input_type -> province.InsertProvincesRequest
	12, // 33: province.ProvinceService.UpdateProvince:input_type -> province.UpdateProvinceRequest
	15, // 34: province.ProvinceService.UpdateProvinces:input_type -> province.UpdateProvincesRequest
	17, // 35: province.ProvinceService.DeleteProvince:input_type -> province.DeleteProvinceRequest
	20, // 36: province.ProvinceService.DeleteProvinces:input_type -> province.DeleteProvincesRequest
	0,  // 37: province.ProvinceService.GetAllProvinces:output_type -> province.GetAllProvincesResponse
	3,  // 38: province.ProvinceService.GetProvinceByID:output_type -> province.GetProvinceByIDResponse
	6,  // 39: province.ProvinceService.GetProvincesByIDs:output_type -> province.GetProvincesByIDsResponse
	9,  // 40: province.ProvinceService.InsertProvince:output_type -> province.InsertProvinceResponse
	11, // 41: province.ProvinceService.InsertProvinces:output_type -> province.InsertProvincesResponse
	14, // 42: province.ProvinceService.UpdateProvince:output_type -> province.UpdateProvinceResponse
	16, // 43: province.ProvinceService.UpdateProvinces:output_type -> province.UpdateProvincesResponse
	19, // 44: province.ProvinceService.DeleteProvince:output_type -> province.DeleteProvinceResponse
	22, // 45: province.ProvinceService.DeleteProvinces:output_type -> province.DeleteProvincesResponse
	37, // [37:46] is the sub-list for method output_type
	28, // [28:37] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_province_proto_init() }
func file_province_proto_init() {
	if File_province_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_province_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllProvincesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProvinceByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProvinceByIDInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProvinceByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProvincesByIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProvincesByIDsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProvincesByIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertProvinceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertProvinceInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertProvinceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertProvincesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertProvincesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProvinceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProvinceInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProvinceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProvincesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProvincesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProvinceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProvinceInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProvinceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProvincesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProvincesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProvincesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvinceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_province_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionalString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_province_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_province_proto_goTypes,
		DependencyIndexes: file_province_proto_depIdxs,
		MessageInfos:      file_province_proto_msgTypes,
	}.Build()
	File_province_proto = out.File
	file_province_proto_rawDesc = nil
	file_province_proto_goTypes = nil
	file_province_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProvinceServiceClient is the client API for ProvinceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProvinceServiceClient interface {
	GetAllProvinces(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetAllProvincesResponse, error)
	GetProvinceByID(ctx context.Context, in *GetProvinceByIDRequest, opts ...grpc.CallOption) (*GetProvinceByIDResponse, error)
	GetProvincesByIDs(ctx context.Context, in *GetProvincesByIDsRequest, opts ...grpc.CallOption) (*GetProvincesByIDsResponse, error)
	InsertProvince(ctx context.Context, in *InsertProvinceRequest, opts ...grpc.CallOption) (*InsertProvinceResponse, error)
	InsertProvinces(ctx context.Context, in *InsertProvincesRequest, opts ...grpc.CallOption) (*InsertProvincesResponse, error)
	UpdateProvince(ctx context.Context, in *UpdateProvinceRequest, opts ...grpc.CallOption) (*UpdateProvinceResponse, error)
	UpdateProvinces(ctx context.Context, in *UpdateProvincesRequest, opts ...grpc.CallOption) (*UpdateProvincesResponse, error)
	DeleteProvince(ctx context.Context, in *DeleteProvinceRequest, opts ...grpc.CallOption) (*DeleteProvinceResponse, error)
	DeleteProvinces(ctx context.Context, in *DeleteProvincesRequest, opts ...grpc.CallOption) (*DeleteProvincesResponse, error)
}

type provinceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProvinceServiceClient(cc grpc.ClientConnInterface) ProvinceServiceClient {
	return &provinceServiceClient{cc}
}

func (c *provinceServiceClient) GetAllProvinces(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetAllProvincesResponse, error) {
	out := new(GetAllProvincesResponse)
	err := c.cc.Invoke(ctx, "/province.ProvinceService/GetAllProvinces", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *provinceServiceClient) GetProvinceByID(ctx context.Context, in *GetProvinceByIDRequest, opts ...grpc.CallOption) (*GetProvinceByIDResponse, error) {
	out := new(GetProvinceByIDResponse)
	err := c.cc.Invoke(ctx, "/province.ProvinceService/GetProvinceByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *provinceServiceClient) GetProvincesByIDs(ctx context.Context, in *GetProvincesByIDsRequest, opts ...grpc.CallOption) (*GetProvincesByIDsResponse, error) {
	out := new(GetProvincesByIDsResponse)
	err := c.cc.Invoke(ctx, "/province.ProvinceService/GetProvincesByIDs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *provinceServiceClient) InsertProvince(ctx context.Context, in *InsertProvinceRequest, opts ...grpc.CallOption) (*InsertProvinceResponse, error) {
	out := new(InsertProvinceResponse)
	err := c.cc.Invoke(ctx, "/province.ProvinceService/InsertProvince", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *provinceServiceClient) InsertProvinces(ctx context.Context, in *InsertProvincesRequest, opts ...grpc.CallOption) (*InsertProvincesResponse, error) {
	out := new(InsertProvincesResponse)
	err := c.cc.Invoke(ctx, "/province.ProvinceService/InsertProvinces", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *provinceServiceClient) UpdateProvince(ctx context.Context, in *UpdateProvinceRequest, opts ...grpc.CallOption) (*UpdateProvinceResponse, error) {
	out := new(UpdateProvinceResponse)
	err := c.cc.Invoke(ctx, "/province.ProvinceService/UpdateProvince", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *provinceServiceClient) UpdateProvinces(ctx context.Context, in *UpdateProvincesRequest, opts ...grpc.CallOption) (*UpdateProvincesResponse, error) {
	out := new(UpdateProvincesResponse)
	err := c.cc.Invoke(ctx, "/province.ProvinceService/UpdateProvinces", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *provinceServiceClient) DeleteProvince(ctx context.Context, in *DeleteProvinceRequest, opts ...grpc.CallOption) (*DeleteProvinceResponse, error) {
	out := new(DeleteProvinceResponse)
	err := c.cc.Invoke(ctx, "/province.ProvinceService/DeleteProvince", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *provinceServiceClient) DeleteProvinces(ctx context.Context, in *DeleteProvincesRequest, opts ...grpc.CallOption) (*DeleteProvincesResponse, error) {
	out := new(DeleteProvincesResponse)
	err := c.cc.Invoke(ctx, "/province.ProvinceService/DeleteProvinces", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProvinceServiceServer is the server API for ProvinceService service.
type ProvinceServiceServer interface {
	GetAllProvinces(context.Context, *emptypb.Empty) (*GetAllProvincesResponse, error)
	GetProvinceByID(context.Context, *GetProvinceByIDRequest) (*GetProvinceByIDResponse, error)
	GetProvincesByIDs(context.Context, *GetProvincesByIDsRequest) (*GetProvincesByIDsResponse, error)
	InsertProvince(context.Context, *InsertProvinceRequest) (*InsertProvinceResponse, error)
	InsertProvinces(context.Context, *InsertProvincesRequest) (*InsertProvincesResponse, error)
	UpdateProvince(context.Context, *UpdateProvinceRequest) (*UpdateProvinceResponse, error)
	UpdateProvinces(context.Context, *UpdateProvincesRequest) (*UpdateProvincesResponse, error)
	DeleteProvince(context.Context, *DeleteProvinceRequest) (*DeleteProvinceResponse, error)
	DeleteProvinces(context.Context, *DeleteProvincesRequest) (*DeleteProvincesResponse, error)
}

// UnimplementedProvinceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProvinceServiceServer struct {
}

func (*UnimplementedProvinceServiceServer) GetAllProvinces(context.Context, *emptypb.Empty) (*GetAllProvincesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllProvinces not implemented")
}
func (*UnimplementedProvinceServiceServer) GetProvinceByID(context.Context, *GetProvinceByIDRequest) (*GetProvinceByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProvinceByID not implemented")
}
func (*UnimplementedProvinceServiceServer) GetProvincesByIDs(context.Context, *GetProvincesByIDsRequest) (*GetProvincesByIDsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProvincesByIDs not implemented")
}
func (*UnimplementedProvinceServiceServer) InsertProvince(context.Context, *InsertProvinceRequest) (*InsertProvinceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertProvince not implemented")
}
func (*UnimplementedProvinceServiceServer) InsertProvinces(context.Context, *InsertProvincesRequest) (*InsertProvincesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertProvinces not implemented")
}
func (*UnimplementedProvinceServiceServer) UpdateProvince(context.Context, *UpdateProvinceRequest) (*UpdateProvinceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProvince not implemented")
}
func (*UnimplementedProvinceServiceServer) UpdateProvinces(context.Context, *UpdateProvincesRequest) (*UpdateProvincesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProvinces not implemented")
}
func (*UnimplementedProvinceServiceServer) DeleteProvince(context.Context, *DeleteProvinceRequest) (*DeleteProvinceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProvince not implemented")
}
func (*UnimplementedProvinceServiceServer) DeleteProvinces(context.Context, *DeleteProvincesRequest) (*DeleteProvincesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProvinces not implemented")
}

func RegisterProvinceServiceServer(s *grpc.Server, srv ProvinceServiceServer) {
	s.RegisterService(&_ProvinceService_serviceDesc, srv)
}

func _ProvinceService_GetAllProvinces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProvinceServiceServer).GetAllProvinces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/province.ProvinceService/GetAllProvinces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProvinceServiceServer).GetAllProvinces(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProvinceService_GetProvinceByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProvinceByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProvinceServiceServer).GetProvinceByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/province.ProvinceService/GetProvinceByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProvinceServiceServer).GetProvinceByID(ctx, req.(*GetProvinceByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProvinceService_GetProvincesByIDs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProvincesByIDsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProvinceServiceServer).GetProvincesByIDs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/province.ProvinceService/GetProvincesByIDs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProvinceServiceServer).GetProvincesByIDs(ctx, req.(*GetProvincesByIDsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProvinceService_InsertProvince_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertProvinceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProvinceServiceServer).InsertProvince(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/province.ProvinceService/InsertProvince",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProvinceServiceServer).InsertProvince(ctx, req.(*InsertProvinceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProvinceService_InsertProvinces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertProvincesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProvinceServiceServer).InsertProvinces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/province.ProvinceService/InsertProvinces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProvinceServiceServer).InsertProvinces(ctx, req.(*InsertProvincesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProvinceService_UpdateProvince_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProvinceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProvinceServiceServer).UpdateProvince(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/province.ProvinceService/UpdateProvince",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProvinceServiceServer).UpdateProvince(ctx, req.(*UpdateProvinceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProvinceService_UpdateProvinces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProvincesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProvinceServiceServer).UpdateProvinces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/province.ProvinceService/UpdateProvinces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProvinceServiceServer).UpdateProvinces(ctx, req.(*UpdateProvincesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProvinceService_DeleteProvince_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProvinceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProvinceServiceServer).DeleteProvince(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/province.ProvinceService/DeleteProvince",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProvinceServiceServer).DeleteProvince(ctx, req.(*DeleteProvinceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProvinceService_DeleteProvinces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProvincesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProvinceServiceServer).DeleteProvinces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/province.ProvinceService/DeleteProvinces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProvinceServiceServer).DeleteProvinces(ctx, req.(*DeleteProvincesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProvinceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "province.ProvinceService",
	HandlerType: (*ProvinceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllProvinces",
			Handler:    _ProvinceService_GetAllProvinces_Handler,
		},
		{
			MethodName: "GetProvinceByID",
			Handler:    _ProvinceService_GetProvinceByID_Handler,
		},
		{
			MethodName: "GetProvincesByIDs",
			Handler:    _ProvinceService_GetProvincesByIDs_Handler,
		},
		{
			MethodName: "InsertProvince",
			Handler:    _ProvinceService_InsertProvince_Handler,
		},
		{
			MethodName: "InsertProvinces",
			Handler:    _ProvinceService_InsertProvinces_Handler,
		},
		{
			MethodName: "UpdateProvince",
			Handler:    _ProvinceService_UpdateProvince_Handler,
		},
		{
			MethodName: "UpdateProvinces",
			Handler:    _ProvinceService_UpdateProvinces_Handler,
		},
		{
			MethodName: "DeleteProvince",
			Handler:    _ProvinceService_DeleteProvince_Handler,
		},
		{
			MethodName: "DeleteProvinces",
			Handler:    _ProvinceService_DeleteProvinces_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "province.proto",
}
